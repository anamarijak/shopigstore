@model shoppingstore.Models.Category

@{
	ViewBag.Title = "Browse";
}


<h2 style="color:#ffe6f3; text-align:center;">Welcome to our @Model.Name shop</h2>





	<ul>
		<i class='fa fa-shopping-cart'>
			<span class='counter'></span>
		</i>
	</ul>

@foreach (var item in Model.Items)
{
	<div class='row'>
		<div class='product--blue'>
			<div class='product_inner'>


				<img alt="bla bla" src="@item.ItemArtUrl" width="300" />
				<a href="@Url.Action("Details","Store",new { id = item.ItemId })" style="color:#ffe6f3">
					<p>@item.Title</p></a>
					<p>@String.Format("{0:F}", item.Price)$</p>
					<button style="color:#ffe6f3 !important;">

						@Html.ActionLink("Add to cart", "AddToCart",
				"ShoppingCart", new { id = item.ItemId }, "")
					</button>
			</div>
			<div class='product_overlay'>
				<h2>Added to basket</h2>
				<i class='fa fa-check'></i>
			</div>
		</div>
	</div>
}


	<style>
		h2 {
			margin-top:30px;
		}

		body {
			background: #1a000d;
			margin:0;
		}
		header {
			width: 95%;
			display: flex;
			justify-content: flex-end;
			flex-flow: row wrap;
		}

			header ul {
				padding: 1.2em 0 0.5em;
			}

			header span {
				padding: 0 0 0 0.5em;
			}

			header span, header i {
				color: #2B2D42;
			}

				header i:nth-of-type(2) {
					cursor: pointer;
				}

		.row {
			width: 286px;
			justify-content: flex-start;
			display: inline-block;
			flex-flow: row wrap;
		}

		.product, .product--blue {
			box-shadow: 1px 5px 15px #CCC;
			width: 15em;
			height: auto;
			border-radius: 3px;
			padding: 2em;
			margin: 1em;
			overflow: hidden;
			position: relative;
			flex: auto;
		}

		.product--blue {
			background: linear-gradient(-45deg, #660033 50%, rgba(255, 255, 255, 0.5) 50%);
		}



			.product img, .product--blue img {
				max-width: 100%;
				height: 278px !important;
				text-align: center;
			}

		.product_inner {
			display: flex;
			align-items: center;
			flex-flow: column wrap;
		}

			.product_inner p {
				color: rgba(255, 255, 255, 0.9);
			}

			.product_inner button {
				border: 1px solid rgba(255, 255, 255, 0.5);
				color: #ffe6f3;
				border-radius: 3px;
				padding: 1em 3em;
				margin: 1em 0 0 0;
				background: none;
				cursor: pointer;
				transition: background ease-in .25s;
			}

				.product_inner button:hover {
					background: #ffe6f3;
					color: #660033;
				}

				.product_inner button:before {
					font-family: FontAwesome;
					content: '\f07A';
					color: #660033;
					position: absolute;
					font-size: 1.5em;
					margin: 0 -1.5em;
				}

				.product_inner button:hover:before {
					color: #ffe6f3;
				}

		.product_overlay {
			background: rgba(255, 255, 255, 0.9);
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			-webkit-transform: translateY(-500px);
			transform: translateY(-500px);
			opacity: 0;
			display: flex;
			flex-flow: column wrap;
			justify-content: center;
			align-items: center;
		}

			.product_overlay h2 {
				color: rgba(43, 45, 66, 0.7);
				font-size: 1.2em;
				margin: 1em 0;
			}

			.product_overlay i {
				color: rgba(43, 45, 66, 0.7);
				font-size: 1.5em;
			}
	</style>
	<script>
		$(function () {

			"use strict"

			var init = "No items yet!";
			var counter = 0;

			// Initial Cart
			$(".counter").html(init);

			// Add Items To Basket
			function addToBasket() {
				counter++;
				$(".counter").html(counter).animate({
					'opacity': '0'
				}, 300, function () {
					$(".counter").delay(300).animate({
						'opacity': '1'
					})
				})
			}

			// Add To Basket Animation
			$("button").on("click", function () {
				addToBasket(); $(this).parent().parent().find(".product_overlay").css({
					'transform': ' translateY(0px)',
					'opacity': '1',
					'transition': 'all ease-in-out .45s'
				}).delay(1500).queue(function () {
					$(this).css({
						'transform': 'translateY(-500px)',
						'opacity': '0',
						'transition': 'all ease-in-out .45s'
					}).dequeue();
				});
			});
		});
	</script>